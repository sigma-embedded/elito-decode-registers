stages:
  - build
  - deploy

.build:extra-dist:
  stage: build
  except:
    variables:
      - $CI_BUILD_TRIGGERED
  script:
    - make clean
    - make all
    - make tests

build:
  stage: build
  coverage: /^\s*Total:\|(\d+\.\d+\%)\s+.*$/
  artifacts:
    expire_in: 1 day
    paths:
      - public/
  script:
  - make clean
  - make all
  - make clean
  - make tests
  - make tests CHECKER='${VALGRIND}'
  - make clean
  - make install DESTDIR=/tmp/decode-install
  - make clean
  - make tests CFLAGS='--coverage -fprofile-abs-path -fno-inline'
  - make lcov-analyze GENHTML_DIR=public/lcov
  - make clean
  - scan-build make tests
  - make clean

build:debian:jessie:
  extends: .build:extra-dist
  image: $CI_REGISTRY/docker/sigma/ci/elito-debian:jessie

build:debian:sid:
  extends: .build:extra-dist
  image: $CI_REGISTRY/docker/sigma/ci/elito-debian:sid

.downstream-trigger: &downstream_trigger
  allow_failure: true
  stage: build
  only:
    - master
  script:
    - |
      curl -fsS --request POST \
      -F "token=${X_CI_TRIGGER_TOKEN}" \
      -F "ref=${CI_COMMIT_REF_NAME}" \
      -F "variables[X_CI_UPSTREAM_REF]=${CI_COMMIT_SHA}" \
      -F "variables[X_CI_UPSTREAM_URI]=${CI_PROJECT_URL}" \
      ${CI_API_V4_URL}/projects/${X_CI_DOWNSTREAM_ID}/trigger/pipeline
    - echo

test-downstream:
  <<: *downstream_trigger
  variables:
    GIT_STRATEGY: none
    GIT_SUBMODULE_STRATEGY: none
    X_CI_DOWNSTREAM_ID: ${X_CI_DOWNSTREAM_ID_DEFS}
    X_CI_TRIGGER_TOKEN: ${X_CI_TRIGGER_TOKEN_DEFS}

pages:
  stage: deploy
  variables:
    GIT_STRATEGY: none
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    expire_in: 1 week
    paths:
      - public
  only:
    - master
  dependencies:
    - build
  script:
    - "true"
  after_script:
    - rm -f public/index.html index.html
    - ( cd public && tree -shF -D --charset=utf-8 -H . ) > index.html
    - mv index.html public/
